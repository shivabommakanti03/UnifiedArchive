# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://vagrantcloud.com/search.
  config.vm.box = "centos/7"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  config.vm.box_check_update = true

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # NOTE: This will enable public access to the opened port
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine and only allow access
  # via 127.0.0.1 to disable public access
  # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  config.vm.synced_folder ".", "/cicd-scripts", mount_options: ["dmode=775,fmode=774"]

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
  #   vb.gui = true
  #
  #   # Customize the amount of memory on the VM:
      #vb.memory = 1024
      vb.cpus = 2
  end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Enable provisioning with a shell script. Additional provisioners such as
  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
  # documentation for more information about their specific syntax and use.
  # config.vm.provision "shell", inline: <<-SHELL
    # apt-get update
  #   apt-get install -y apache2
  # SHELL
  
  # PHILIPS NOTE:  The no_proxy var does not allow the local PGN IP ranges.
  # We do fully enable these env vars so that setup scripts/packages work.
  # However, as a final root shell provision command below we copy in a blank
  # definition to /etc/profile.d/ named to load after the file this plugin
  # creates. i.e. "cp /tmp/proxy-clear-all.sh /etc/profile.d/proxy2-clear-all.sh"
  if Vagrant.has_plugin?("vagrant-proxyconf")
    config.proxy.http     = "http://199.168.151.10:9480"
    config.proxy.https    = "http://199.168.151.10:9480"
    config.proxy.no_proxy = "localhost,127.0.0.1,.philips.com,"
  end

  config.vm.provision "file", source: "admin-vm/proxy-philips-pgn.sh", destination: "/tmp/proxy-philips-pgn.sh"
  config.vm.provision "file", source: "admin-vm/proxy-clear-all.sh", destination: "/tmp/proxy-clear-all.sh"
  config.vm.provision "shell", inline: <<-SHELL
        sudo su
        source /tmp/proxy-philips-pgn.sh
        yum install -y epel-release
        yum update -y
        yum install -y sshpass python36 htop screen parallel
        cp /tmp/proxy-clear-all.sh /etc/profile.d/proxy2-clear-all.sh
  SHELL

  config.vm.provision "shell", privileged: false, inline: <<-SHELL
      ssh-keygen -t rsa -N "" -f ~/.ssh/id_rsa
      source /tmp/proxy-philips-pgn.sh
      python36 -m venv ve-ansible
      cd ve-ansible/
      source ./bin/activate
      python -m ensurepip --upgrade
      pip install --upgrade ansible
  SHELL

  # Enable guest additions update.
  config.vbguest.auto_update = true
  config.vbguest.no_remote = true
  config.vbguest.auto_reboot = true
end
